/*
Web Modeler REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 41f4f56
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FileDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileDto{}

// FileDto struct for FileDto
type FileDto struct {
	Metadata *FileMetadataDto `json:"metadata,omitempty"`
	Content *string `json:"content,omitempty"`
}

// NewFileDto instantiates a new FileDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileDto() *FileDto {
	this := FileDto{}
	return &this
}

// NewFileDtoWithDefaults instantiates a new FileDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileDtoWithDefaults() *FileDto {
	this := FileDto{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *FileDto) GetMetadata() FileMetadataDto {
	if o == nil || IsNil(o.Metadata) {
		var ret FileMetadataDto
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDto) GetMetadataOk() (*FileMetadataDto, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *FileDto) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given FileMetadataDto and assigns it to the Metadata field.
func (o *FileDto) SetMetadata(v FileMetadataDto) {
	o.Metadata = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *FileDto) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDto) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *FileDto) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *FileDto) SetContent(v string) {
	o.Content = &v
}

func (o FileDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	return toSerialize, nil
}

type NullableFileDto struct {
	value *FileDto
	isSet bool
}

func (v NullableFileDto) Get() *FileDto {
	return v.value
}

func (v *NullableFileDto) Set(val *FileDto) {
	v.value = val
	v.isSet = true
}

func (v NullableFileDto) IsSet() bool {
	return v.isSet
}

func (v *NullableFileDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileDto(val *FileDto) *NullableFileDto {
	return &NullableFileDto{value: val, isSet: true}
}

func (v NullableFileDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


